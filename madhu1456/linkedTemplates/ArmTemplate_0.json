{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "madhu1456"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"LS_source_onprem_Sqlserver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_source_onprem_Sqlserver'"
		},
		"LS_akv_primaryakv_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://primaryakv1456.vault.azure.net/"
		},
		"LS_sink_azure_sqlserver_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "azureSqlconnection"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_akv_primaryakv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_akv_primaryakv_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "partone"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_sink_azure_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_akv_primaryakv",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_sink_azure_sqlserver_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_akv_primaryakv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_source_onprem_Sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_source_onprem_Sqlserver_connectionString')]"
				},
				"connectVia": {
					"referenceName": "selfIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_emp_table_onprem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_source_onprem_Sqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "deptno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dname",
						"type": "varchar"
					},
					{
						"name": "loc",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dept"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_source_onprem_Sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_sink_azuresql_emp_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sink_azure_sqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "empno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "job",
						"type": "varchar"
					},
					{
						"name": "mgr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hiredate",
						"type": "date"
					},
					{
						"name": "sal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "comm",
						"type": "int",
						"precision": 10
					},
					{
						"name": "deptno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "genderid",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sink_azure_sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sink_azure_sqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "deptsal"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sink_azure_sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sink_azure_sqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "empno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "job",
						"type": "varchar"
					},
					{
						"name": "mgr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hiredate",
						"type": "date"
					},
					{
						"name": "sal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "comm",
						"type": "int",
						"precision": 10
					},
					{
						"name": "deptno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "genderid",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "childemp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sink_azure_sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprem_to_azure_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OnPrem_to_azuresql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_emp_table_onprem",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_sink_azuresql_emp_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T01:53:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_emp_table_onprem')]",
				"[concat(variables('factoryId'), '/datasets/DS_sink_azuresql_emp_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aggrigate_branch')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_sink_azuresql_emp_table",
								"type": "DatasetReference"
							},
							"name": "empsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "deptwisesal"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empno as integer,",
						"          ename as string,",
						"          job as string,",
						"          mgr as integer,",
						"          hiredate as date,",
						"          sal as integer,",
						"          comm as integer,",
						"          deptno as integer,",
						"          genderid as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> empsource",
						"empsource aggregate(groupBy(deptno),",
						"     {deptwise-sal} = sum(sal)) ~> deptwisesal",
						"deptwisesal sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1",
						"empsource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_sink_azuresql_emp_table')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/exists_filter')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference"
							},
							"name": "empdata"
						},
						{
							"dataset": {
								"referenceName": "DS_sink_azuresql_emp_table",
								"type": "DatasetReference"
							},
							"name": "childemp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "exists1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empno as integer,",
						"          ename as string,",
						"          job as string,",
						"          mgr as integer,",
						"          hiredate as date,",
						"          sal as integer,",
						"          comm as integer,",
						"          deptno as integer,",
						"          genderid as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> empdata",
						"source(output(",
						"          empno as integer,",
						"          ename as string,",
						"          job as string,",
						"          mgr as integer,",
						"          hiredate as date,",
						"          sal as integer,",
						"          comm as integer,",
						"          deptno as integer,",
						"          genderid as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     partitionBy('hash', 1)) ~> childemp",
						"filter1, childemp exists(empdata@empno == childemp@empno,",
						"     negate:true,",
						"     broadcast: 'auto')~> exists1",
						"empdata filter(equals(deptno,10)) ~> filter1",
						"exists1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable2')]",
				"[concat(variables('factoryId'), '/datasets/DS_sink_azuresql_emp_table')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aggrigate_branch_dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aggrigate_branch",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empsource": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aggrigate_branch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/exists_dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "exists_filter",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "exists_filter",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empdata": {},
									"childemp": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/exists_filter')]"
			]
		}
	]
}